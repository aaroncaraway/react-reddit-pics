{"version":3,"sources":["components/ItemModal.js","components/MediaCard.js","components/Gallery.js","components/Dashboard.js","App.js","index.js"],"names":["useStyles","makeStyles","modal","display","alignItems","justifyContent","width","height","backgroundColor","textAlign","imageModalBox","margin","outline","imageModal","padding","maxWidth","maxHeight","modalBoxTitle","fontSize","modalBox","TransitionsModal","item","classes","React","useState","open","setOpen","actualItem","data","Button","type","onClick","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","src","url","alt","title","Typography","author","ups","upvote_ratio","total_awards_received","pb","root","media","MediaCard","photo","photoUrl","permalink","selfText","selftext","hasphoto","indexOf","clippedTitle","length","substring","Card","CardActionArea","target","href","CardMedia","image","CardContent","gutterBottom","variant","component","color","CardActions","size","uuid","Gallery","photos","map","theme","search","position","borderRadius","shape","fade","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","navButtons","float","Dashboard","loading","setLoading","setData","subreddit","setSubreddit","searchTerm","setSearchTerm","query","setQuery","useEffect","a","axios","result","console","log","children","fetchData","AppBar","Toolbar","onSubmit","evt","preventDefault","InputBase","onChange","e","value","placeholder","input","inputProps","navButton","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b045c951.chunk.js","sourcesContent":["/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\n// import CardMedia from '@material-ui/core/CardMedia';\n\nconst useStyles = makeStyles(() => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 'vw',\n    height: 'vh',\n    backgroundColor: 'white',\n    textAlign: 'center',\n  },\n  imageModalBox: {\n    margin: '0 auto',\n    textAlign: 'center',\n    '&:active': {\n      outline: 'none',\n    },\n  },\n  imageModal: {\n    padding: 10,\n    maxWidth: 340,\n    maxHeight: 500,\n    '@media (min-width: 1280px)': {\n      maxWidth: 500,\n    },\n    height: 'auto',\n  },\n  modalBoxTitle: {\n    padding: 10,\n    fontSize: '1.5em',\n    maxWidth: 340,\n    '@media (min-width: 1280px)': {\n      maxWidth: 500,\n    },\n  },\n  modalBox: {\n    backgroundColor: 'white',\n  },\n}));\n\nexport default function TransitionsModal({ item }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const actualItem = item.data ? item.data : 'Test Post Plz Ignore';\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button type=\"button\" onClick={handleOpen}>\n        MORE INFO!\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Box className={classes.modalBox}>\n            <div className={classes.imageModalBox}>\n              <img src={actualItem.url} alt={actualItem.title} className={classes.imageModal} />\n            </div>\n\n            <Typography className={classes.modalBoxTitle}>{actualItem.title}</Typography>\n            <Typography>Author: {actualItem.author}</Typography>\n            <Typography>Upvotes: {actualItem.ups}</Typography>\n            <Typography>Ratio Upvotes to Downvotes: {actualItem.upvote_ratio}</Typography>\n            <Typography>\n              Number of Awards Given (total): {actualItem.total_awards_received}\n            </Typography>\n            <Box pb=\"10px\" />\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { v1 as uuid } from 'uuid';\nimport ItemModal from './ItemModal';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 340,\n    height: 525,\n    margin: '10px 10px 10px 10px',\n  },\n  media: {\n    height: 340,\n    width: 340,\n  },\n});\n\nexport default function MediaCard({ item }) {\n  const photo = item.data;\n  const classes = useStyles();\n  const photoUrl = `https://www.reddit.com/${photo.permalink}`;\n  const selfText = photo.selftext;\n  // TODO: Refactor\n  // This song and dance ensures we're getting a photo (not a video)\n  // or a crosspost\n  const hasphoto =\n    photo.url.indexOf('.jpg') !== -1 ||\n    (photo.url.indexOf('.gif') !== -1 && photo.url.indexOf('.gifv') === -1) ||\n    photo.url.indexOf('.png') !== -1;\n  const clippedTitle = photo.title.length > 50 ? `${photo.title.substring(0, 50)}...` : photo.title;\n\n  return (\n    <div key={uuid()}>\n      {selfText.length < 2 && hasphoto && (\n        <Card className={classes.root}>\n          <CardActionArea target=\"_blank\" href={photoUrl}>\n            <CardMedia className={classes.media} image={photo.url} title={photo.title} />\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                {clippedTitle}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {photo.author}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <ItemModal item={item} />\n            <Button size=\"small\" color=\"primary\" target=\"_blank\" href={photoUrl}>\n              See it on Reddit\n            </Button>\n          </CardActions>\n        </Card>\n      )}\n    </div>\n  );\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport MediaCard from './MediaCard';\n\nconst Gallery = ({ photos }) => (\n  <div className=\"dashboard-container\">\n    {photos && photos.map((item) => <MediaCard item={item} />)}\n  </div>\n);\n\nexport default Gallery;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\n\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n// import ListItems from './ListItems';\nimport Gallery from './Gallery';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  navButtons: {\n    float: 'right',\n  },\n}));\n\nfunction Dashboard() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({ photos: [] });\n  const [subreddit, setSubreddit] = useState('pics');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [query, setQuery] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = query\n        ? `https://www.reddit.com/r/${subreddit}/search.json?q=${query}&restrict_sr=on&include_over_18=on&sort=relevance&t=all`\n        : `https://www.reddit.com/r/${subreddit}/.json?jsonp=`;\n      const result = await axios(url);\n      console.log(result.data.data.children, subreddit);\n      setData({ photos: result.data.data.children });\n      setLoading(false);\n    };\n    fetchData();\n  }, [subreddit, query]);\n\n  // const filterData = () => {\n  //   const filteredPhotos = data.photos.filter((photo) => photo.data.title.includes('.'));\n  //   console.log(filteredPhotos);\n  //   setData({ photos: filteredPhotos });\n  // };\n\n  const changeSub = () => {\n    setLoading(true);\n    setSubreddit('catsstandingup');\n\n    setQuery(null);\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    console.log(searchTerm);\n    // OLD -- Filtering simply on words in the title\n    // const filteredPhotos = data.photos.filter((photo) => photo.data.title.includes('.'));\n    setQuery(searchTerm);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Prettier Reddit Pics\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <form onSubmit={handleSubmit}>\n              <InputBase\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </form>\n          </div>\n          <Button className={classes.navButton} onClick={() => changeSub()}>\n            CHANGE SUB\n          </Button>\n        </Toolbar>\n        {/* <Button onClick={() => filterData()}>BUTTON</Button> */}\n\n        {/* <Button onClick={() => search()}>SEARCH</Button> */}\n      </AppBar>\n      {loading ? (\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          ...loading\n        </Typography>\n      ) : (\n        <>\n          <Gallery photos={data.photos} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-env browser */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}